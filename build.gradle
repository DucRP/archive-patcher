plugins {
	id "java"
	id "maven-publish"
}

version = 1.0

subprojects.each { subproject -> evaluationDependsOn(subproject.path) }
jar.dependsOn subprojects.tasks['classes']
jar {
	manifest {
		attributes 'Implementation-Title': 'Archive Patcher',
			'Implementation-Version': version,
			'Implementation-Vendor': 'https://github.com/andrewhayden/archive-patcher'
	}
	archiveBaseName.set(project.name)
	subprojects.each { subproject ->
		from subproject.sourceSets.main.output
	}
	from "LICENSE"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	manifest {
		attributes 'Implementation-Title': 'Archive Patcher',
			'Implementation-Version': version,
			'Implementation-Vendor': 'https://github.com/andrewhayden/archive-patcher'
	}
	archiveBaseName.set(project.name)
	archiveClassifier.set('sources')
	subprojects.each { subproject ->
		from subproject.sourceSets.main.allSource
	}
	from "LICENSE"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	manifest {
		attributes 'Implementation-Title': 'Archive Patcher',
			'Implementation-Version': version,
			'Implementation-Vendor': 'https://github.com/andrewhayden/archive-patcher'
	}
	archiveBaseName.set(project.name)
	archiveClassifier.set('javadoc')
	subprojects.each { subproject ->
		from subproject.javadoc.destinationDir
	}
	from "LICENSE"
}

dependencies {
	implementation project(':tools')
}

allprojects {
	repositories {
		mavenCentral()
	}
}

artifacts {
	archives jar
	archives sourcesJar
	archives javadocJar
}

publishing {
	publications {
		MyPublication(MavenPublication) {
			from components.java
			groupId 'com.google'
			artifactId 'archivepatcher'
			version version
		}
	}
}
